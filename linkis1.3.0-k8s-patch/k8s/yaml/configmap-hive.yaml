# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ConfigMap
apiVersion: v1
metadata:
  name: hive-config
  namespace: preprod
  selfLink: /api/v1/namespaces/preprod/configmaps/hive-config
  uid: a36b7e46-76d6-4964-9a18-2f1a0625f668
  resourceVersion: '777926'
  creationTimestamp: '2022-06-30T15:52:49Z'
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"v1","data":{"hive-site.xml":"\u003c?xml
      version=\"1.0\"?\u003e\n\u003c?xml-stylesheet type=\"text/xsl\"
      href=\"configuration.xsl\"?\u003e\n\u003cconfiguration\u003e\n       
      \u003cproperty\u003e\n         
      \u003cname\u003ejavax.jdo.option.ConnectionURL\u003c/name\u003e\n         
      \u003cvalue\u003ejdbc:mysql://127.0.0.1:3306/metastore?createDatabaseIfNotExist=true\u0026amp;useSSL=false\u003c/value\u003e\n         
      \u003cdescription\u003eJDBC connect string for a JDBC
      metastore\u003c/description\u003e\n       
      \u003c/property\u003e\n\n        \u003cproperty\u003e\n         
      \u003cname\u003ejavax.jdo.option.ConnectionDriverName\u003c/name\u003e\n         
      \u003cvalue\u003ecom.mysql.jdbc.Driver\u003c/value\u003e\n         
      \u003cdescription\u003eDriver class name for a JDBC
      metastore\u003c/description\u003e\n       
      \u003c/property\u003e\n\n        \u003cproperty\u003e\n         
      \u003cname\u003ejavax.jdo.option.ConnectionUserName\u003c/name\u003e\n         
      \u003cvalue\u003eroot\u003c/value\u003e\n         
      \u003cdescription\u003eusername to use against metastore
      database\u003c/description\u003e\n        \u003c/property\u003e\n\n       
      \u003cproperty\u003e\n         
      \u003cname\u003ejavax.jdo.option.ConnectionPassword\u003c/name\u003e\n         
      \u003cvalue\u003e123456\u003c/value\u003e\n         
      \u003cdescription\u003epassword to use against metastore
      database\u003c/description\u003e\n       
      \u003c/property\u003e\n\n\u003cproperty\u003e\n\u003cname\u003ehive.metastore.warehouse.dir\u003c/name\u003e\n\u003cvalue\u003e/user/hive/warehouse\u003c/value\u003e\n\u003cdescription\u003elocation
      of default database for the
      warehouse\u003c/description\u003e\n\u003c/property\u003e\n\n\u003cproperty\u003e\n   
      \u003cname\u003ehive.metastore.schema.verification\u003c/name\u003e\n   
      \u003cvalue\u003efalse\u003c/value\u003e\n\u003c/property\u003e\n\n\u003cproperty\u003e\n       
      \u003cname\u003ehive.cli.print.header\u003c/name\u003e\n       
      \u003cvalue\u003etrue\u003c/value\u003e\n\u003c/property\u003e\n\n\u003cproperty\u003e\n       
      \u003cname\u003ehive.cli.print.current.db\u003c/name\u003e\n       
      \u003cvalue\u003etrue\u003c/value\u003e\n\u003c/property\u003e\n\n\u003cproperty\u003e\n\u003cname\u003ehive.metastore.uris\u003c/name\u003e\n\u003cvalue\u003ethrift://127.0.0.1:9083\u003c/value\u003e\n\u003c/property\u003e\n\n\u003cproperty\u003e 
      \n  \u003cname\u003ehive.security.authorization.enabled\u003c/name\u003e  
      \n  \u003cvalue\u003etrue\u003c/value\u003e  \n 
      \u003cdescription\u003eEnable or disable the hive client
      authorization\u003c/description\u003e 
      \n\u003c/property\u003e\n\n\u003c/configuration\u003e\n","ivysettings.xml":"\u003c!--\n  
      Licensed to the Apache Software Foundation (ASF) under one or more\n  
      contributor license agreements.  See the NOTICE file distributed with\n  
      this work for additional information regarding copyright ownership.\n  
      The ASF licenses this file to You under the Apache License, Version
      2.0\n   (the \"License\"); you may not use this file except in compliance
      with\n   the License.  You may obtain a copy of the License at\n\n      
      http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by
      applicable law or agreed to in writing, software\n   distributed under the
      License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR
      CONDITIONS OF ANY KIND, either express or implied.\n   See the License for
      the specific language governing permissions and\n   limitations under the
      License.\n   --\u003e\n\n\u003c!--This file is used by grapes to download
      dependencies from a maven repository.\n    This is just a template and can
      be edited to add more
      repositories.\n--\u003e\n\n\u003civysettings\u003e\n  \u003c!--name of the
      defaultResolver should always be 'downloadGrapes'. --\u003e\n 
      \u003csettings defaultResolver=\"downloadGrapes\"/\u003e\n  \u003c!-- Only
      set maven.local.repository if not already set --\u003e\n  \u003cproperty
      name=\"maven.local.repository\" value=\"${user.home}/.m2/repository\"
      override=\"false\" /\u003e\n  \u003cproperty
      name=\"m2-pattern\"\n           
      value=\"file:${maven.local.repository}/[organisation]/[module]/[revision]/[module]-[revision](-[classifier]).[ext]\"\n           
      override=\"false\"/\u003e\n  \u003cresolvers\u003e\n    \u003c!-- more
      resolvers can be added here --\u003e\n    \u003cchain
      name=\"downloadGrapes\"\u003e\n      \u003c!-- This resolver uses ibiblio
      to find artifacts, compatible with maven2 repository --\u003e\n     
      \u003cibiblio name=\"central\" m2compatible=\"true\"/\u003e\n     
      \u003curl name=\"local-maven2\" m2compatible=\"true\"\u003e\n       
      \u003cartifact pattern=\"${m2-pattern}\"/\u003e\n     
      \u003c/url\u003e\n      \u003c!-- File resolver to add jars from the local
      system. --\u003e\n      \u003cfilesystem name=\"test\"
      checkmodified=\"true\"\u003e\n        \u003cartifact
      pattern=\"${test.tmp.dir}/[module]-[revision](-[classifier]).jar\"/\u003e\n     
      \u003c/filesystem\u003e\n\n    \u003c/chain\u003e\n 
      \u003c/resolvers\u003e\n\u003c/ivysettings\u003e\n","parquet-logging.properties":"#
      Licensed to the Apache Software Foundation (ASF) under one\n# or more
      contributor license agreements.  See the NOTICE file\n# distributed with
      this work for additional information\n# regarding copyright ownership. 
      The ASF licenses this file\n# to you under the Apache License, Version 2.0
      (the\n# \"License\"); you may not use this file except in compliance\n#
      with the License.  You may obtain a copy of the License at\n#\n#    
      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by
      applicable law or agreed to in writing, software\n# distributed under the
      License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR
      CONDITIONS OF ANY KIND, either express or implied.\n# See the License for
      the specific language governing permissions and\n# limitations under the
      License.\n\n# Properties file which configures the operation of the JDK\n#
      logging facility.\n\n# The system will look for this config file, first
      using\n# a System property specified at startup:\n#\n# \u003ejava
      -Djava.util.logging.config.file=myLoggingConfigFilePath\n#\n# If this
      property is not specified, then the config file is\n# retrieved from its
      default location at:\n#\n# JDK_HOME/jre/lib/logging.properties\n\n# Global
      logging properties.\n# ------------------------------------------\n# The
      set of handlers to be loaded upon startup.\n# Comma-separated list of
      class names.\n# (? LogManager docs say no comma here, but JDK example has
      comma.)\n#
      handlers=java.util.logging.ConsoleHandler\norg.apache.parquet.handlers=
      java.util.logging.FileHandler\n\n# Default global logging level.\n#
      Loggers and Handlers may override this level\n.level=INFO\n\n# Handlers\n#
      -----------------------------------------\n\n# --- ConsoleHandler ---\n#
      Override of global logging
      level\njava.util.logging.ConsoleHandler.level=INFO\njava.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter\njava.util.logging.SimpleFormatter.format=[%1$tc]
      %4$s: %2$s - %5$s %6$s%n\n\n# --- FileHandler ---\n# Override of global
      logging level\njava.util.logging.FileHandler.level=ALL\n\n# Naming style
      for the output file:\n# (The output file is placed in the system temporary
      directory.\n# %u is used to provide unique identifier for the file.\n# For
      more information refer\n#
      https://docs.oracle.com/javase/7/docs/api/java/util/logging/FileHandler.html)\njava.util.logging.FileHandler.pattern=%t/parquet-%u.log\n\n#
      Limiting size of output file in
      bytes:\njava.util.logging.FileHandler.limit=50000000\n\n# Number of output
      files to cycle through, by appending an\n# integer to the base file
      name:\njava.util.logging.FileHandler.count=1\n\n# Style of output (Simple
      or
      XML):\njava.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter\n"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"hive-config","namespace":"preprod"}}
  managedFields:
    - manager: kubectl-client-side-apply
      operation: Update
      apiVersion: v1
      time: '2022-06-30T15:52:49Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          .: {}
          'f:ivysettings.xml': {}
          'f:parquet-logging.properties': {}
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
    - manager: dashboard
      operation: Update
      apiVersion: v1
      time: '2022-07-01T13:34:32Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:data':
          'f:hive-site.xml': {}
data:
  hive-site.xml: |
    <?xml version="1.0"?>
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
    <configuration>
        <property>
            <name>javax.jdo.option.ConnectionURL</name>
            <value>jdbc:mysql://10.0.2.101:3306/metastore?createDatabaseIfNotExist=true&amp;useSSL=false</value>
            <description>JDBC connect string for a JDBC metastore</description>
        </property>
        
        <property>
            <name>javax.jdo.option.ConnectionDriverName</name>
            <value>com.mysql.jdbc.Driver</value>
            <description>Driver class name for a JDBC metastore</description>
        </property>
        
        <property>
            <name>javax.jdo.option.ConnectionUserName</name>
            <value>root</value>
            <description>username to use against metastore database</description>
        </property>
        
        <property>
            <name>javax.jdo.option.ConnectionPassword</name>
            <value>7956214</value>
            <description>password to use against metastore database</description>
        </property>
        
        <property>
            <name>hive.metastore.warehouse.dir</name>
            <value>/user/hive/warehouse</value>
            <description>location of default database for the warehouse</description>
        </property>
        
        <property>
            <name>hive.metastore.schema.verification</name>
            <value>false</value>
        </property>
        
        <property>
            <name>hive.cli.print.header</name>
            <value>true</value>
        </property>
        
        <property>
            <name>hive.cli.print.current.db</name>
            <value>true</value>
        </property>
        
        <property>
            <name>hive.metastore.uris</name>
            <value>thrift://10.0.2.101:9083</value>
        </property>
        
        <property>
            <name>hive.security.authorization.enabled</name>
            <value>true</value>
            <description>Enable or disable the hive client authorization</description>
        </property>

    </configuration>
  ivysettings.xml: >
    <!--
       Licensed to the Apache Software Foundation (ASF) under one or more
       contributor license agreements.  See the NOTICE file distributed with
       this work for additional information regarding copyright ownership.
       The ASF licenses this file to You under the Apache License, Version 2.0
       (the "License"); you may not use this file except in compliance with
       the License.  You may obtain a copy of the License at

           http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
       -->

    <!--This file is used by grapes to download dependencies from a maven
    repository.
        This is just a template and can be edited to add more repositories.
    -->


    <ivysettings>
        <!--name of the defaultResolver should always be 'downloadGrapes'. -->
        <settings defaultResolver="downloadGrapes"/>
        <!-- Only set maven.local.repository if not already set -->
        <property name="maven.local.repository" value="${user.home}/.m2/repository" override="false" />
        <property name="m2-pattern"
                  value="file:${maven.local.repository}/[organisation]/[module]/[revision]/[module]-[revision](-[classifier]).[ext]"
                  override="false"/>
        <resolvers>
            <!-- more resolvers can be added here -->
            <chain name="downloadGrapes">
                <!-- This resolver uses ibiblio to find artifacts, compatible with maven2 repository -->
                <ibiblio name="central" m2compatible="true"/>
                <url name="local-maven2" m2compatible="true">
                    <artifact pattern="${m2-pattern}"/>
                </url>
                <!-- File resolver to add jars from the local system. -->
                <filesystem name="test" checkmodified="true">
                    <artifact pattern="${test.tmp.dir}/[module]-[revision](-[classifier]).jar"/>
                </filesystem>
            
            </chain>
        </resolvers>
    </ivysettings>
  parquet-logging.properties: >
    # Licensed to the Apache Software Foundation (ASF) under one

    # or more contributor license agreements.  See the NOTICE file

    # distributed with this work for additional information

    # regarding copyright ownership.  The ASF licenses this file

    # to you under the Apache License, Version 2.0 (the

    # "License"); you may not use this file except in compliance

    # with the License.  You may obtain a copy of the License at

    #

    #     http://www.apache.org/licenses/LICENSE-2.0

    #

    # Unless required by applicable law or agreed to in writing, software

    # distributed under the License is distributed on an "AS IS" BASIS,

    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

    # See the License for the specific language governing permissions and

    # limitations under the License.


    # Properties file which configures the operation of the JDK

    # logging facility.


    # The system will look for this config file, first using

    # a System property specified at startup:

    #

    # >java -Djava.util.logging.config.file=myLoggingConfigFilePath

    #

    # If this property is not specified, then the config file is

    # retrieved from its default location at:

    #

    # JDK_HOME/jre/lib/logging.properties


    # Global logging properties.

    # ------------------------------------------

    # The set of handlers to be loaded upon startup.

    # Comma-separated list of class names.

    # (? LogManager docs say no comma here, but JDK example has comma.)

    # handlers=java.util.logging.ConsoleHandler

    org.apache.parquet.handlers= java.util.logging.FileHandler


    # Default global logging level.

    # Loggers and Handlers may override this level

    .level=INFO


    # Handlers

    # -----------------------------------------


    # --- ConsoleHandler ---

    # Override of global logging level

    java.util.logging.ConsoleHandler.level=INFO

    java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter

    java.util.logging.SimpleFormatter.format=[%1$tc] %4$s: %2$s - %5$s %6$s%n


    # --- FileHandler ---

    # Override of global logging level

    java.util.logging.FileHandler.level=ALL


    # Naming style for the output file:

    # (The output file is placed in the system temporary directory.

    # %u is used to provide unique identifier for the file.

    # For more information refer

    #
    https://docs.oracle.com/javase/7/docs/api/java/util/logging/FileHandler.html)

    java.util.logging.FileHandler.pattern=%t/parquet-%u.log


    # Limiting size of output file in bytes:

    java.util.logging.FileHandler.limit=50000000


    # Number of output files to cycle through, by appending an

    # integer to the base file name:

    java.util.logging.FileHandler.count=1


    # Style of output (Simple or XML):

    java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter
