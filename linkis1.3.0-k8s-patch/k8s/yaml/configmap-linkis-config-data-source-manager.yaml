kind: ConfigMap
apiVersion: v1
metadata:
  name: linkis-config-data-source-manager
data:
  application-linkis.yml: |
    debug: false
    eureka:
      instance:
        prefer-ip-address: true
        # hostname: headless-linkis-ps-data-source-manager
        instance-id: ${spring.cloud.client.ip-address}:linkis-ps-data-source-manager:9109
      client:
        serviceUrl:
          defaultZone: http://linkis-mg-eureka:20303/eureka/
  linkis-ps-data-source-manager.properties: >
    ##restful

    wds.linkis.server.restful.scan.packages=org.apache.linkis.datasourcemanager.core.restful


    ##mybatis

    wds.linkis.server.mybatis.mapperLocations=classpath:org/apache/linkis/datasourcemanager/core/dao/mapper/*.xml


    wds.linkis.server.mybatis.typeAliasesPackage=org.apache.linkis.datasourcemanager.common.domain,org.apache.linkis.datasourcemanager.core.vo


    wds.linkis.server.mybatis.BasePackage=org.apache.linkis.datasourcemanager.core.dao



    ##hive meta

    hive.meta.url=jdbc:mysql://10.0.2.101:3306/metastore?useUnicode=true

    hive.meta.user=root

    hive.meta.password=7956214

    wds.linkis.metadata.hive.encode.enabled=false


    ##Spring

    spring.server.port=9109

    spring.spring.main.allow-bean-definition-overriding=true

    spring.spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

    spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
  linkis.properties: >

    ##enable wds.linkis.test.mode where use knife4j

    wds.linkis.test.mode=false


    wds.linkis.server.version=v1


    ##spring conf

    wds.linkis.gateway.url=http://linkis-mg-gateway:9001

    wds.linkis.eureka.defaultZone=http://linkis-mg-eureka:20303/eureka/

    ##mybatis

    wds.linkis.server.mybatis.datasource.url=jdbc:mysql://10.0.2.101:3306/linkis110?characterEncoding=UTF-8

    wds.linkis.server.mybatis.datasource.username=root

    wds.linkis.server.mybatis.datasource.password=7956214

    # mysql

    wds.linkis.mysql.is.encrypt=false


    #hadoop/hive/spark config

    hadoop.config.dir=/usr/local/hadoop/etc/hadoop

    hive.config.dir=/usr/local/hive/conf

    spark.config.dir=/usr/local/spark/conf



    ##file path

    wds.linkis.filesystem.root.path=file:///tmp/linkis/

    wds.linkis.filesystem.hdfs.root.path=hdfs:///tmp/linkis/

    ##bml path:default use hdfs

    wds.linkis.bml.is.hdfs=true

    wds.linkis.bml.hdfs.prefix=/apps-data

    #wds.linkis.bml.local.prefix=/data/dss/bml


    ##engine Version

    #wds.linkis.spark.engine.version=

    #wds.linkis.hive.engine.version=

    #wds.linkis.python.engine.version=


    #LinkisHome

    wds.linkis.home=/appcom/Install/LinkisInstall

    #Linkis governance station administrators

    wds.linkis.governance.station.admin=root

    wds.linkis.gateway.conf.publicservice.list=query,jobhistory,application,configuration,filesystem,udf,variable,microservice,errorcode,bml,datasource


    spring.spring.servlet.multipart.max-file-size=500MB

    spring.spring.servlet.multipart.max-request-size=500MB


    # note:value of zero means Jetty will never write to disk.
    https://github.com/spring-projects/spring-boot/issues/9073

    spring.spring.servlet.multipart.file-size-threshold=50MB
  log4j2.xml: "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n  ~ contributor license agreements.  See the NOTICE file distributed with\n  ~ this work for additional information regarding copyright ownership.\n  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n  ~ (the \"License\"); you may not use this file except in compliance with\n  ~ the License.  You may obtain a copy of the License at\n  ~ \n  ~   http://www.apache.org/licenses/LICENSE-2.0\n  ~ \n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~ See the License for the specific language governing permissions and\n  ~ limitations under the License.\n  -->\n  \n<configuration status=\"INFO\" monitorInterval=\"30\">\n    <appenders>\n        <Console name=\"console\" target=\"SYSTEM_OUT\">\n\t\t<PatternLayout pattern=\"%d{MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36}%n%msg%n%n\" />\n\t</Console>\n        <RollingFile name=\"RollingFile\" append=\"false\" fileName=\"${env:LINKIS_LOG_DIR}/${sys:serviceName}.log\"\n                     filePattern=\"${env:LINKIS_LOG_DIR}/$${date:yyyy-MM}/${sys:serviceName}/linkis-log-%d{yyyy-MM-dd}-%i.log\">\n            <PatternLayout pattern=\"%d{yyyy-MM-dd HH:mm:ss.SSS} [%-5level] [%-40t] %c{1.} (%L) [%M] - %msg%xEx%n\"/>\n            <Policies>\n                <TimeBasedTriggeringPolicy interval=\"1 hour\" />\n                <SizeBasedTriggeringPolicy size=\"100MB\"/>\n            </Policies>\n            <DefaultRolloverStrategy max=\"10\"/>\n        </RollingFile>\n    </appenders>\n    <loggers>\n        <root level=\"INFO\">\n            <AppenderRef ref=\"console\" level=\"info\" />\n            <appender-ref ref=\"RollingFile\"/>\n        </root>\n        <logger name=\"org.apache.linkis.message.builder.DefaultMessageJob\" level=\"warn\" additivity=\"true\">\n            <appender-ref ref=\"RollingFile\"/>\n        </logger>\n\n        <logger name=\"org.apache.linkis.message.scheduler.DefaultMessageExecutor\" level=\"warn\" additivity=\"true\">\n            <appender-ref ref=\"RollingFile\"/>\n        </logger>\n        <logger name=\"com.netflix.loadbalancer.DynamicServerListLoadBalancer\" level=\"warn\" additivity=\"true\">\n            <appender-ref ref=\"RollingFile\"/>\n        </logger>\n    </loggers>\n</configuration>\n\n"
  token.properties: |-
    # 
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements.  See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License.  You may obtain a copy of the License at
    # http://www.apache.org/licenses/LICENSE-2.0
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #
    ## http API token authentication
    ## Token-Code=Token-User
    ##eg:TEST-AUTH=hadoop,root,user01
    ### http request with header { Token-Code:TEST-AUTH,Token-User:user01}
    QML-AUTH=*
    BML-AUTH=*
    WS-AUTH=*
    dss-AUTH=*
    QUALITIS-AUTH=*
